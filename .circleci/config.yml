version: 2

test_env: &test_env
  RUN_POSTGRES_TESTS: 1
  POSTGRES_USER: postgres
  POSTGRES_DB: circle_database
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432

postgres_service: &postgres_service
  image: circleci/postgres:9.6-alpine
  environment: # env to pass to CircleCI, specified values must match test_env
    POSTGRES_USER: postgres
    POSTGRES_DB: circle_database

cache_1: &cache_1
  key: npm-cache-01-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-1
  paths:
    - ./node_modules
    - ./yarn.lock
    - packages/opentelemetry-base/node_modules
    - packages/opentelemetry-scope-base/node_modules
    - packages/opentelemetry-types/node_modules
    - packages/opentelemetry-scope-async-hooks/node_modules
    - packages/opentelemetry-core/node_modules
    - packages/opentelemetry-exporter-prometheus/node_modules
    - packages/opentelemetry-metrics/node_modules
    - packages/opentelemetry-tracing/node_modules
    - packages/opentelemetry-exporter-jaeger/node_modules
    - packages/opentelemetry-exporter-zipkin/node_modules
    - packages/opentelemetry-node/node_modules
    - packages/opentelemetry-shim-opentracing/node_modules
    - packages/opentelemetry-web/node_modules
    - packages/opentelemetry-plugin-dns/node_modules

cache_2: &cache_2
  key: npm-cache-02-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-1
  paths:
    - packages/opentelemetry-plugin-grpc/node_modules
    - packages/opentelemetry-plugin-http/node_modules
    - packages/opentelemetry-plugin-http2/node_modules
    - packages/opentelemetry-plugin-mongodb/node_modules
    - packages/opentelemetry-plugin-redis/node_modules
    - packages/opentelemetry-plugin-postgres/opentelemetry-plugin-pg/node_modules
    - packages/opentelemetry-plugin-document-load/node_modules
    - packages/opentelemetry-plugin-https/node_modules
    - packages/opentelemetry-plugin-postgres/opentelemetry-plugin-pg-pool/node_modules
    - packages/opentelemetry-base/yarn.lock
    - packages/opentelemetry-scope-base/yarn.lock
    - packages/opentelemetry-types/yarn.lock
    - packages/opentelemetry-scope-async-hooks/yarn.lock
    - packages/opentelemetry-core/yarn.lock
    - packages/opentelemetry-exporter-prometheus/yarn.lock

cache_3: &cache_3
  key: npm-cache-03-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-1
  paths:
    - packages/opentelemetry-metrics/yarn.lock
    - packages/opentelemetry-tracing/yarn.lock
    - packages/opentelemetry-exporter-jaeger/yarn.lock
    - packages/opentelemetry-exporter-zipkin/yarn.lock
    - packages/opentelemetry-node/yarn.lock
    - packages/opentelemetry-shim-opentracing/yarn.lock
    - packages/opentelemetry-web/yarn.lock
    - packages/opentelemetry-plugin-dns/yarn.lock
    - packages/opentelemetry-plugin-grpc/yarn.lock
    - packages/opentelemetry-plugin-http/yarn.lock
    - packages/opentelemetry-plugin-http2/yarn.lock
    - packages/opentelemetry-plugin-mongodb/yarn.lock
    - packages/opentelemetry-plugin-redis/yarn.lock
    - packages/opentelemetry-plugin-postgres/opentelemetry-plugin-pg/yarn.lock
    - packages/opentelemetry-plugin-document-load/yarn.lock
    - packages/opentelemetry-plugin-https/yarn.lock
    - packages/opentelemetry-plugin-postgres/opentelemetry-plugin-pg-pool/yarn.lock

node_unit_tests: &node_unit_tests
  steps:
    - checkout
    - run:
        name: Create Checksum
        command: sh .circleci/checksum.sh /tmp/checksums.txt
    - run:
        name: Setup environment variables
        command: |
          echo "export CIRCLE_NODE_VERSION=\$(node --version | grep -oE 'v[0-9]+')" >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Log out node.js version
        command: |
          node --version
          echo "CIRCLE_NODE_VERSION=${CIRCLE_NODE_VERSION}"
    - restore_cache:
        keys:
          - npm-cache-01-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-1
    - restore_cache:
        keys:
          - npm-cache-02-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-1
    - restore_cache:
        keys:
          - npm-cache-03-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-1
    - run:
        name: Install Dependencies
        command: yarn install
    - save_cache:
        <<: *cache_1
    - save_cache:
        <<: *cache_2
    - save_cache:
        <<: *cache_3
    - run:
        name: Compile code
        command: yarn compile
    - run:
        name: Unit tests
        command: yarn test
    - run:
        name: report coverage
        command: if [ "${CIRCLE_NODE_VERSION}" = "v12" ]; then yarn codecov; fi

browsers_unit_tests: &browsers_unit_tests
  steps:
    - checkout
    - run:
        name: Create Checksum
        command: sh .circleci/checksum.sh /tmp/checksums.txt
    - run:
        name: Setup environment variables
        command: |
          echo "export CIRCLE_NODE_VERSION=\$(node --version | grep -oE 'v[0-9]+')" >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Log out node.js version
        command: |
          node --version
          echo "CIRCLE_NODE_VERSION=${CIRCLE_NODE_VERSION}"
    - restore_cache:
        keys:
          - npm-cache-01-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-1
    - restore_cache:
        keys:
          - npm-cache-02-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-1
    - restore_cache:
        keys:
          - npm-cache-03-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-1
    - run:
        name: Install Dependencies
        command: yarn install
    - save_cache:
        <<: *cache_1
    - save_cache:
        <<: *cache_2
    - save_cache:
        <<: *cache_3
    - run:
        name: Compile code
        command: yarn compile
    - run:
        name: Unit tests
        command: yarn test:browser
    - run:
        name: report coverage
        command: if [ "$CIRCLE_NODE_VERSION" = "v12" ]; then yarn codecov:browser; fi

jobs:
  lint_&_docs:
    docker:
      - image: node:12
    steps:
      - checkout
      - run:
          name: Install modules and dependencies.
          command: yarn install
      - run:
          name: Check code style and linting
          command: yarn run check
      - run:
          name: Docs tests
          command: yarn docs-test
  node8:
    docker:
      - image: node:8
        environment: *test_env
      - *postgres_service
    <<: *node_unit_tests
  node10:
    docker:
      - image: node:10
        environment: *test_env
      - *postgres_service
    <<: *node_unit_tests
  node12:
    docker:
      - image: node:12
        environment: *test_env
      - *postgres_service
    <<: *node_unit_tests
  node12-browsers:
    docker:
      - image: circleci/node:12-browsers
    <<: *browsers_unit_tests

workflows:
  version: 2
  build:
    jobs:
      - lint_&_docs
      - node8
      - node10
      - node12
      - node12-browsers
