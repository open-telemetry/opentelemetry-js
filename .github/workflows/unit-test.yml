name: Unit Tests
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  node-tests-stable:
    strategy:
      fail-fast: false
      matrix:
        node_version: ["8", "10", "12", "14", "16"]
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: restore lerna
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: node-tests-stable-${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('**/package.json') }}

      - name: Bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests

      - name: Build ðŸ”§
        run: |
          npm run compile

      - name: Unit tests
        run: npm run test
      - name: Report Coverage
        run: npm run codecov
        if: ${{ matrix.node_version == '14' }}
  browser-tests-stable:
    runs-on: ubuntu-latest
    container:
      image: circleci/node:16-browsers
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Permission Setup
        run: sudo chmod -R 777 /github /__w
      - name: Checkout
        uses: actions/checkout@v2

      - name: restore lerna
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            node_modules
            */*/node_modules
          key: browser-tests-stable-${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('**/package.json') }}

      - name: Bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests

      - name: Build ðŸ”§
        run: |
          npm run compile
          # run additional compilation variants
          npx lerna run compile

      - name: Unit tests
        run: npm run test:browser
      - name: Report Coverage
        run: npm run codecov:browser
  webworker-tests-stable:
    runs-on: ubuntu-latest
    container:
      image: circleci/node:14-browsers
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Permission Setup
        run: sudo chmod -R 777 /github /__w

      - name: restore lerna
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            node_modules
            */*/node_modules
          key: browser-tests-stable-${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('**/package.json') }}

      - name: Bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js'

      - name: Build ðŸ”§
        run: |
          npm run compile
          # run additional compilation variants
          npx lerna run compile

      - name: Unit tests
        run: npm run test:webworker
      - name: Report Coverage
        run: npm run codecov:webworker
  node-tests-experimental:
    strategy:
      fail-fast: false
      matrix:
        node_version: ["8", "10", "12", "14", "16"]
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: restore lerna
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            experimental/node_modules
            experimental/*/*/node_modules
          key: node-tests-experimental-${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('experimental/**/package.json') }}

      - name: Bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: experimental
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js'

      - name: Build ðŸ”§
        working-directory: experimental
        run: |
          npm run compile

      - name: Unit tests
        working-directory: experimental
        run: npm run test
      - name: Report Coverage
        working-directory: experimental
        run: npm run codecov
        if: ${{ matrix.node_version == '14' }}
  browser-tests-experimental:
    runs-on: ubuntu-latest
    container:
      image: circleci/node:16-browsers
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Permission Setup
        run: sudo chmod -R 777 /github /__w
      - name: Checkout
        uses: actions/checkout@v2

      - name: restore lerna
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            experimental/node_modules
            experimental/*/*/node_modules
          key: browser-tests-experimental-${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('**/package.json') }}

      - name: Bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: experimental
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js'

      - name: Build ðŸ”§
        working-directory: experimental
        run: |
          npm run compile
          # run additional compilation variants
          npx lerna run compile

      - name: Unit tests
        working-directory: experimental
        run: npm run test:browser
      - name: Report Coverage
        working-directory: experimental
        run: npm run codecov:browser
  webworker-tests-experimental:
    runs-on: ubuntu-latest
    container:
      image: circleci/node:14-browsers
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Permission Setup
        run: sudo chmod -R 777 /github /__w

      - name: restore lerna
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            experimental/node_modules
            experimental/*/*/node_modules
          key: browser-tests-experimental-${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('**/package.json') }}

      - name: Bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: experimental
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js'

      - name: Build ðŸ”§
        working-directory: experimental
        run: |
          npm run compile
          # run additional compilation variants
          npx lerna run compile

      - name: Unit tests
        working-directory: experimental
        run: npm run test:webworker
      - name: Report Coverage
        working-directory: experimental
        run: npm run codecov:webworker
