name: Publish packages to NPM

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  npm-publish:
    permissions:
      contents: read
      id-token: write # needed for OIDC and provenance
    runs-on: ubuntu-latest
    environment: npm-publish-environment
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with:
          # Require npm 11.5.1 or later for https://docs.npmjs.com/trusted-publishers.
          node-version: 24
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci --ignore-scripts
      - run: npm run compile
      # Release Please has already incremented versions and published tags, so we just
      # need to publish all unpublished versions to npm here
      # See: https://github.com/lerna/lerna/tree/main/libs/commands/publish#bump-from-package
      - name: Publish to npm
        env:
          NPM_CONFIG_PROVENANCE: true
        # NOTE: using --concurrency 1 to reduce the likelihood of a race when publishing,
        # which happens when the npm registry is not fully consistent yet. This can cause the publishing of a package to be
        # rejected because dependencies are not available yet. `lerna` does ensure that this is not the case locally
        # (packages are in-fact published in the correct order), but the race on the registry still applies.
        # If this happens, run the workflow again - there should be enough time for everything to settle until this workflow
        # attempts to publish again.
        run: npx lerna publish --concurrency 1 from-package --no-push --no-private --no-git-tag-version --dist-tag=latest --yes
